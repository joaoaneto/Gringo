Terminals unused in grammar

   CHAR
   INT
   FLOAT
   DOUBLE
   VOID
   UNSIGNED
   CONST
   STATIC
   SIZEOF
   DOC_PARAM
   REST
   GREATER_THEN
   LESS_THEN
   NOT
   XOR
   COMMA
   DOT
   TWO_DOTS
   COL_L
   COL_R
   BRA_L
   BRA_R
   QUOTE
   DOUBLE_QUOTE
   IF
   ELSE
   BREAK
   FOR
   WHILE
   RETURN
   EXIT
   CONTINUE
   NEW_LINE
   CARRIAGE_RETURN
   TAB
   BACKSLASH
   BAR_ZERO


State 13 conflicts: 2 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: ExpList

    2 ExpList: Command
    3        | Commands

    4 Commands: ExpList Command

    5 Command: Assignment
    6        | Exp

    7 Exp: BinExpPlus
    8    | BinExpMinus
    9    | Factor

   10 BinExpPlus: Exp ADD Factor

   11 BinExpMinus: Exp SUBTRACT Factor

   12 Factor: FactorMul
   13       | FactorDiv
   14       | UnExp

   15 FactorMul: Factor MUL UnExp

   16 FactorDiv: Factor DIV UnExp

   17 UnExp: UnExpPlus
   18      | UnExpMinus
   19      | UnExpLog
   20      | UnExpExp
   21      | LparExpRpar
   22      | Value

   23 UnExpPlus: ADD Value

   24 UnExpMinus: SUBTRACT Value

   25 UnExpLog: LOG2 PAR_L Exp PAR_R

   26 UnExpExp: EXP PAR_L Exp PAR_R

   27 Value: LITERAL_INT
   28      | LITERAL_DOUBLE
   29      | IDENTIFIER

   30 LparExpRpar: PAR_L Exp PAR_R

   31 Assignment: IDENTIFIER EQUAL Exp DOT_COMMA


Terminals, with rules where they appear

$end (0) 0
error (256)
CHAR (258)
LOG2 (259) 25
EXP (260) 26
INT (261)
FLOAT (262)
DOUBLE (263)
VOID (264)
UNSIGNED (265)
CONST (266)
STATIC (267)
SIZEOF (268)
EQUAL (269) 31
SUBTRACT (270) 11 24
DOC_PARAM (271)
ADD (272) 10 23
MUL (273) 15
DIV (274) 16
REST (275)
GREATER_THEN (276)
LESS_THEN (277)
NOT (278)
XOR (279)
COMMA (280)
DOT (281)
TWO_DOTS (282)
DOT_COMMA (283) 31
PAR_L (284) 25 26 30
PAR_R (285) 25 26 30
COL_L (286)
COL_R (287)
BRA_L (288)
BRA_R (289)
QUOTE (290)
DOUBLE_QUOTE (291)
IF (292)
ELSE (293)
BREAK (294)
FOR (295)
WHILE (296)
RETURN (297)
EXIT (298)
CONTINUE (299)
IDENTIFIER (300) 29 31
LITERAL_INT (301) 27
LITERAL_DOUBLE (302) 28
NEW_LINE (303)
CARRIAGE_RETURN (304)
TAB (305)
BACKSLASH (306)
BAR_ZERO (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program (54)
    on left: 1, on right: 0
ExpList (55)
    on left: 2 3, on right: 1 4
Commands (56)
    on left: 4, on right: 3
Command (57)
    on left: 5 6, on right: 2 4
Exp (58)
    on left: 7 8 9, on right: 6 10 11 25 26 30 31
BinExpPlus (59)
    on left: 10, on right: 7
BinExpMinus (60)
    on left: 11, on right: 8
Factor (61)
    on left: 12 13 14, on right: 9 10 11 15 16
FactorMul (62)
    on left: 15, on right: 12
FactorDiv (63)
    on left: 16, on right: 13
UnExp (64)
    on left: 17 18 19 20 21 22, on right: 14 15 16
UnExpPlus (65)
    on left: 23, on right: 17
UnExpMinus (66)
    on left: 24, on right: 18
UnExpLog (67)
    on left: 25, on right: 19
UnExpExp (68)
    on left: 26, on right: 20
Value (69)
    on left: 27 28 29, on right: 22 23 24
LparExpRpar (70)
    on left: 30, on right: 21
Assignment (71)
    on left: 31, on right: 5


state 0

    0 $accept: . Program $end

    LOG2            shift, and go to state 1
    EXP             shift, and go to state 2
    SUBTRACT        shift, and go to state 3
    ADD             shift, and go to state 4
    PAR_L           shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    LITERAL_INT     shift, and go to state 7
    LITERAL_DOUBLE  shift, and go to state 8

    Program      go to state 9
    ExpList      go to state 10
    Commands     go to state 11
    Command      go to state 12
    Exp          go to state 13
    BinExpPlus   go to state 14
    BinExpMinus  go to state 15
    Factor       go to state 16
    FactorMul    go to state 17
    FactorDiv    go to state 18
    UnExp        go to state 19
    UnExpPlus    go to state 20
    UnExpMinus   go to state 21
    UnExpLog     go to state 22
    UnExpExp     go to state 23
    Value        go to state 24
    LparExpRpar  go to state 25
    Assignment   go to state 26


state 1

   25 UnExpLog: LOG2 . PAR_L Exp PAR_R

    PAR_L  shift, and go to state 27


state 2

   26 UnExpExp: EXP . PAR_L Exp PAR_R

    PAR_L  shift, and go to state 28


state 3

   24 UnExpMinus: SUBTRACT . Value

    IDENTIFIER      shift, and go to state 29
    LITERAL_INT     shift, and go to state 7
    LITERAL_DOUBLE  shift, and go to state 8

    Value  go to state 30


state 4

   23 UnExpPlus: ADD . Value

    IDENTIFIER      shift, and go to state 29
    LITERAL_INT     shift, and go to state 7
    LITERAL_DOUBLE  shift, and go to state 8

    Value  go to state 31


state 5

   30 LparExpRpar: PAR_L . Exp PAR_R

    LOG2            shift, and go to state 1
    EXP             shift, and go to state 2
    SUBTRACT        shift, and go to state 3
    ADD             shift, and go to state 4
    PAR_L           shift, and go to state 5
    IDENTIFIER      shift, and go to state 29
    LITERAL_INT     shift, and go to state 7
    LITERAL_DOUBLE  shift, and go to state 8

    Exp          go to state 32
    BinExpPlus   go to state 14
    BinExpMinus  go to state 15
    Factor       go to state 16
    FactorMul    go to state 17
    FactorDiv    go to state 18
    UnExp        go to state 19
    UnExpPlus    go to state 20
    UnExpMinus   go to state 21
    UnExpLog     go to state 22
    UnExpExp     go to state 23
    Value        go to state 24
    LparExpRpar  go to state 25


state 6

   29 Value: IDENTIFIER .
   31 Assignment: IDENTIFIER . EQUAL Exp DOT_COMMA

    EQUAL  shift, and go to state 33

    $default  reduce using rule 29 (Value)


state 7

   27 Value: LITERAL_INT .

    $default  reduce using rule 27 (Value)


state 8

   28 Value: LITERAL_DOUBLE .

    $default  reduce using rule 28 (Value)


state 9

    0 $accept: Program . $end

    $end  shift, and go to state 34


state 10

    1 Program: ExpList .
    4 Commands: ExpList . Command

    LOG2            shift, and go to state 1
    EXP             shift, and go to state 2
    SUBTRACT        shift, and go to state 3
    ADD             shift, and go to state 4
    PAR_L           shift, and go to state 5
    IDENTIFIER      shift, and go to state 6
    LITERAL_INT     shift, and go to state 7
    LITERAL_DOUBLE  shift, and go to state 8

    $default  reduce using rule 1 (Program)

    Command      go to state 35
    Exp          go to state 13
    BinExpPlus   go to state 14
    BinExpMinus  go to state 15
    Factor       go to state 16
    FactorMul    go to state 17
    FactorDiv    go to state 18
    UnExp        go to state 19
    UnExpPlus    go to state 20
    UnExpMinus   go to state 21
    UnExpLog     go to state 22
    UnExpExp     go to state 23
    Value        go to state 24
    LparExpRpar  go to state 25
    Assignment   go to state 26


state 11

    3 ExpList: Commands .

    $default  reduce using rule 3 (ExpList)


state 12

    2 ExpList: Command .

    $default  reduce using rule 2 (ExpList)


state 13

    6 Command: Exp .
   10 BinExpPlus: Exp . ADD Factor
   11 BinExpMinus: Exp . SUBTRACT Factor

    SUBTRACT  shift, and go to state 36
    ADD       shift, and go to state 37

    SUBTRACT  [reduce using rule 6 (Command)]
    ADD       [reduce using rule 6 (Command)]
    $default  reduce using rule 6 (Command)


state 14

    7 Exp: BinExpPlus .

    $default  reduce using rule 7 (Exp)


state 15

    8 Exp: BinExpMinus .

    $default  reduce using rule 8 (Exp)


state 16

    9 Exp: Factor .
   15 FactorMul: Factor . MUL UnExp
   16 FactorDiv: Factor . DIV UnExp

    MUL  shift, and go to state 38
    DIV  shift, and go to state 39

    $default  reduce using rule 9 (Exp)


state 17

   12 Factor: FactorMul .

    $default  reduce using rule 12 (Factor)


state 18

   13 Factor: FactorDiv .

    $default  reduce using rule 13 (Factor)


state 19

   14 Factor: UnExp .

    $default  reduce using rule 14 (Factor)


state 20

   17 UnExp: UnExpPlus .

    $default  reduce using rule 17 (UnExp)


state 21

   18 UnExp: UnExpMinus .

    $default  reduce using rule 18 (UnExp)


state 22

   19 UnExp: UnExpLog .

    $default  reduce using rule 19 (UnExp)


state 23

   20 UnExp: UnExpExp .

    $default  reduce using rule 20 (UnExp)


state 24

   22 UnExp: Value .

    $default  reduce using rule 22 (UnExp)


state 25

   21 UnExp: LparExpRpar .

    $default  reduce using rule 21 (UnExp)


state 26

    5 Command: Assignment .

    $default  reduce using rule 5 (Command)


state 27

   25 UnExpLog: LOG2 PAR_L . Exp PAR_R

    LOG2            shift, and go to state 1
    EXP             shift, and go to state 2
    SUBTRACT        shift, and go to state 3
    ADD             shift, and go to state 4
    PAR_L           shift, and go to state 5
    IDENTIFIER      shift, and go to state 29
    LITERAL_INT     shift, and go to state 7
    LITERAL_DOUBLE  shift, and go to state 8

    Exp          go to state 40
    BinExpPlus   go to state 14
    BinExpMinus  go to state 15
    Factor       go to state 16
    FactorMul    go to state 17
    FactorDiv    go to state 18
    UnExp        go to state 19
    UnExpPlus    go to state 20
    UnExpMinus   go to state 21
    UnExpLog     go to state 22
    UnExpExp     go to state 23
    Value        go to state 24
    LparExpRpar  go to state 25


state 28

   26 UnExpExp: EXP PAR_L . Exp PAR_R

    LOG2            shift, and go to state 1
    EXP             shift, and go to state 2
    SUBTRACT        shift, and go to state 3
    ADD             shift, and go to state 4
    PAR_L           shift, and go to state 5
    IDENTIFIER      shift, and go to state 29
    LITERAL_INT     shift, and go to state 7
    LITERAL_DOUBLE  shift, and go to state 8

    Exp          go to state 41
    BinExpPlus   go to state 14
    BinExpMinus  go to state 15
    Factor       go to state 16
    FactorMul    go to state 17
    FactorDiv    go to state 18
    UnExp        go to state 19
    UnExpPlus    go to state 20
    UnExpMinus   go to state 21
    UnExpLog     go to state 22
    UnExpExp     go to state 23
    Value        go to state 24
    LparExpRpar  go to state 25


state 29

   29 Value: IDENTIFIER .

    $default  reduce using rule 29 (Value)


state 30

   24 UnExpMinus: SUBTRACT Value .

    $default  reduce using rule 24 (UnExpMinus)


state 31

   23 UnExpPlus: ADD Value .

    $default  reduce using rule 23 (UnExpPlus)


state 32

   10 BinExpPlus: Exp . ADD Factor
   11 BinExpMinus: Exp . SUBTRACT Factor
   30 LparExpRpar: PAR_L Exp . PAR_R

    SUBTRACT  shift, and go to state 36
    ADD       shift, and go to state 37
    PAR_R     shift, and go to state 42


state 33

   31 Assignment: IDENTIFIER EQUAL . Exp DOT_COMMA

    LOG2            shift, and go to state 1
    EXP             shift, and go to state 2
    SUBTRACT        shift, and go to state 3
    ADD             shift, and go to state 4
    PAR_L           shift, and go to state 5
    IDENTIFIER      shift, and go to state 29
    LITERAL_INT     shift, and go to state 7
    LITERAL_DOUBLE  shift, and go to state 8

    Exp          go to state 43
    BinExpPlus   go to state 14
    BinExpMinus  go to state 15
    Factor       go to state 16
    FactorMul    go to state 17
    FactorDiv    go to state 18
    UnExp        go to state 19
    UnExpPlus    go to state 20
    UnExpMinus   go to state 21
    UnExpLog     go to state 22
    UnExpExp     go to state 23
    Value        go to state 24
    LparExpRpar  go to state 25


state 34

    0 $accept: Program $end .

    $default  accept


state 35

    4 Commands: ExpList Command .

    $default  reduce using rule 4 (Commands)


state 36

   11 BinExpMinus: Exp SUBTRACT . Factor

    LOG2            shift, and go to state 1
    EXP             shift, and go to state 2
    SUBTRACT        shift, and go to state 3
    ADD             shift, and go to state 4
    PAR_L           shift, and go to state 5
    IDENTIFIER      shift, and go to state 29
    LITERAL_INT     shift, and go to state 7
    LITERAL_DOUBLE  shift, and go to state 8

    Factor       go to state 44
    FactorMul    go to state 17
    FactorDiv    go to state 18
    UnExp        go to state 19
    UnExpPlus    go to state 20
    UnExpMinus   go to state 21
    UnExpLog     go to state 22
    UnExpExp     go to state 23
    Value        go to state 24
    LparExpRpar  go to state 25


state 37

   10 BinExpPlus: Exp ADD . Factor

    LOG2            shift, and go to state 1
    EXP             shift, and go to state 2
    SUBTRACT        shift, and go to state 3
    ADD             shift, and go to state 4
    PAR_L           shift, and go to state 5
    IDENTIFIER      shift, and go to state 29
    LITERAL_INT     shift, and go to state 7
    LITERAL_DOUBLE  shift, and go to state 8

    Factor       go to state 45
    FactorMul    go to state 17
    FactorDiv    go to state 18
    UnExp        go to state 19
    UnExpPlus    go to state 20
    UnExpMinus   go to state 21
    UnExpLog     go to state 22
    UnExpExp     go to state 23
    Value        go to state 24
    LparExpRpar  go to state 25


state 38

   15 FactorMul: Factor MUL . UnExp

    LOG2            shift, and go to state 1
    EXP             shift, and go to state 2
    SUBTRACT        shift, and go to state 3
    ADD             shift, and go to state 4
    PAR_L           shift, and go to state 5
    IDENTIFIER      shift, and go to state 29
    LITERAL_INT     shift, and go to state 7
    LITERAL_DOUBLE  shift, and go to state 8

    UnExp        go to state 46
    UnExpPlus    go to state 20
    UnExpMinus   go to state 21
    UnExpLog     go to state 22
    UnExpExp     go to state 23
    Value        go to state 24
    LparExpRpar  go to state 25


state 39

   16 FactorDiv: Factor DIV . UnExp

    LOG2            shift, and go to state 1
    EXP             shift, and go to state 2
    SUBTRACT        shift, and go to state 3
    ADD             shift, and go to state 4
    PAR_L           shift, and go to state 5
    IDENTIFIER      shift, and go to state 29
    LITERAL_INT     shift, and go to state 7
    LITERAL_DOUBLE  shift, and go to state 8

    UnExp        go to state 47
    UnExpPlus    go to state 20
    UnExpMinus   go to state 21
    UnExpLog     go to state 22
    UnExpExp     go to state 23
    Value        go to state 24
    LparExpRpar  go to state 25


state 40

   10 BinExpPlus: Exp . ADD Factor
   11 BinExpMinus: Exp . SUBTRACT Factor
   25 UnExpLog: LOG2 PAR_L Exp . PAR_R

    SUBTRACT  shift, and go to state 36
    ADD       shift, and go to state 37
    PAR_R     shift, and go to state 48


state 41

   10 BinExpPlus: Exp . ADD Factor
   11 BinExpMinus: Exp . SUBTRACT Factor
   26 UnExpExp: EXP PAR_L Exp . PAR_R

    SUBTRACT  shift, and go to state 36
    ADD       shift, and go to state 37
    PAR_R     shift, and go to state 49


state 42

   30 LparExpRpar: PAR_L Exp PAR_R .

    $default  reduce using rule 30 (LparExpRpar)


state 43

   10 BinExpPlus: Exp . ADD Factor
   11 BinExpMinus: Exp . SUBTRACT Factor
   31 Assignment: IDENTIFIER EQUAL Exp . DOT_COMMA

    SUBTRACT   shift, and go to state 36
    ADD        shift, and go to state 37
    DOT_COMMA  shift, and go to state 50


state 44

   11 BinExpMinus: Exp SUBTRACT Factor .
   15 FactorMul: Factor . MUL UnExp
   16 FactorDiv: Factor . DIV UnExp

    MUL  shift, and go to state 38
    DIV  shift, and go to state 39

    $default  reduce using rule 11 (BinExpMinus)


state 45

   10 BinExpPlus: Exp ADD Factor .
   15 FactorMul: Factor . MUL UnExp
   16 FactorDiv: Factor . DIV UnExp

    MUL  shift, and go to state 38
    DIV  shift, and go to state 39

    $default  reduce using rule 10 (BinExpPlus)


state 46

   15 FactorMul: Factor MUL UnExp .

    $default  reduce using rule 15 (FactorMul)


state 47

   16 FactorDiv: Factor DIV UnExp .

    $default  reduce using rule 16 (FactorDiv)


state 48

   25 UnExpLog: LOG2 PAR_L Exp PAR_R .

    $default  reduce using rule 25 (UnExpLog)


state 49

   26 UnExpExp: EXP PAR_L Exp PAR_R .

    $default  reduce using rule 26 (UnExpExp)


state 50

   31 Assignment: IDENTIFIER EQUAL Exp DOT_COMMA .

    $default  reduce using rule 31 (Assignment)
